// Generated by CoffeeScript 1.4.0
var admin_name, admin_pwd, codecUtil, config, dao, dateUtil, log, logentries;

logentries = require('node-logentries');

codecUtil = require("../../util/codecUtil");

dateUtil = require('../../util/dateUtil');

dao = require('../../models/BlogDao');

config = require('../../config');

log = logentries.logger(config.logToken);

admin_name = process.env.ADMIN_NAME ? process.env.ADMIN_NAME : "596392912@qq.com";

admin_pwd = process.env.ADMIN_PWD ? process.env.ADMIN_PWD : "4297f44b13955235245b2497399d7a93";

exports.get = function(req, res) {
  return res.render('admin/signin', {
    title: 'Snode管理后台'
  });
};

exports.auth = function(req, res, next) {
  if (req.session.admin) {
    res.locals.admin = req.session.admin;
    console.log("has session!");
    log.debug("has session!");
    return next();
  } else {
    return res.render('admin/signin', {
      title: 'Snode管理后台'
    });
  }
};

exports.post = function(req, res) {
  var admin, remember;
  admin = req.body.admin;
  remember = req.body.remember;
  admin.password = codecUtil.md5Hex(admin.password);
  console.log(admin);
  log.log("debug", admin);
  if (admin_name === admin.email && admin_pwd === admin.password) {
    req.session.admin = admin;
    res.locals.admin = admin;
    return dao.all({}, {
      only: ['id', 'title', 'del_status'],
      order: ['-id']
    }, function(err, blogs) {
      log.log("debug", err || blogs);
      return res.render('admin/index', {
        title: 'Snode管理后台',
        blogs: blogs
      });
    });
  } else {
    return res.render('admin/signin', {
      title: 'Snode管理后台'
    });
  }
};

exports.index = function(req, res) {
  return dao.all({}, {
    only: ['id', 'title', 'del_status'],
    order: ['-id']
  }, function(err, blogs) {
    log.log("debug", err || blogs);
    return res.render('admin/index', {
      title: 'Snode管理后台',
      blogs: blogs
    });
  });
};

exports.logout = function(req, res) {
  log.info("Admin logout");
  req.session.destroy();
  res.clearCookie('snode_admin', {
    path: '/'
  });
  return res.redirect('/');
};
