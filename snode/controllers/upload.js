// Generated by CoffeeScript 1.6.1
var config, fs, log, logentries, util;

logentries = require('node-logentries');

fs = require('fs');

util = require('util');

config = require('../config');

log = logentries.logger(config.logToken);

exports.validator = function(req, res, next) {
  var file_name, tmp_path;
  file_name = req.files.imgFile.name;
  tmp_path = req.files.imgFile.path;
  if (!/(\S+)(.JPG|.jpg|.JPEG|.jpeg|.GIF|.gif|.BMP|.bmp|.PNG|.png)/.test(file_name)) {
    fs.unlink(tmp_path, function(err) {
      if (err) {
        console.log(err);
      }
      if (err) {
        return log.log("debug", err);
      }
    });
    return res.json({
      errors: 1,
      message: "亲，不支持这种格式的图片噢！"
    });
  } else {
    return next();
  }
};

exports.editor = function(req, res) {
  var file_name, img_name, img_path, readStream, target_path, tmp_path, writeStream;
  tmp_path = req.files.imgFile.path;
  file_name = req.files.imgFile.name;
  img_name = new Date().getTime() + file_name.substr(file_name.lastIndexOf('.'), file_name.length);
  img_path = config.domain + '/uploads/' + img_name;
  console.log(img_path);
  log.log("debug", img_path);
  target_path = './public/uploads/' + img_name;
  readStream = fs.createReadStream(tmp_path);
  writeStream = fs.createWriteStream(target_path);
  util.pump(readStream, writeStream, function() {
    return fs.unlinkSync(tmp_path);
  });
  return res.json({
    error: 0,
    url: img_path
  });
};
