// Generated by CoffeeScript 1.4.0
var codecUtil, config, dao, dateUtil, log, logentries, mailUtil;

logentries = require('node-logentries');

dateUtil = require('../util/dateUtil');

mailUtil = require('../util/mailUtil');

codecUtil = require('../util/codecUtil');

config = require('../config');

dao = require('../models/BlogDao');

log = logentries.logger(config.logToken);

exports.get = function(req, res) {
  return dao.all({
    del_status: 0
  }, {
    only: ['id', 'title', 'update_time'],
    order: ['-id']
  }, function(err, blogs) {
    var b, blog, _i, _len;
    console.log(err || blogs);
    log.log("debug", err || blogs);
    for (_i = 0, _len = blogs.length; _i < _len; _i++) {
      blog = blogs[_i];
      for (b in blog) {
        if (blog[b] instanceof Date) {
          blog[b] = dateUtil.format(blog[b]);
        }
      }
    }
    return res.render('index', {
      title: 'snode',
      blogs: blogs
    });
  });
};

exports.mailGet = function(req, res) {
  return res.render('mail', {
    title: 'snode邮件发送'
  });
};

exports.mailPost = function(req, res) {
  var code, email, user;
  email = req.body.email;
  user = {
    email: email,
    nick_name: email.substr(0, email.indexOf('@'))
  };
  code = codecUtil.md5Hex(email);
  mailUtil.sendSignup(user, code);
  return dao.all({
    del_status: 0
  }, {
    only: ['id', 'title', 'update_time'],
    order: ['-id']
  }, function(err, blogs) {
    var b, blog, _i, _len;
    console.log(err || blogs);
    log.log("debug", err || blogs);
    for (_i = 0, _len = blogs.length; _i < _len; _i++) {
      blog = blogs[_i];
      for (b in blog) {
        if (blog[b] instanceof Date) {
          blog[b] = dateUtil.format(blog[b]);
        }
      }
    }
    return res.render('index', {
      title: 'snode',
      blogs: blogs
    });
  });
};
